"use client"
import  CTA  from "@/components/CTA";
import {
  Carousel,
  CarouselContent,
  CarouselItem,
  CarouselNext,
  CarouselPrevious,
  type CarouselApi,
} from "@/components/ui/carousel"
import { Card, CardContent } from "@/components/ui/card"
import { Quote } from "lucide-react"

import { useEffect, useRef, useState } from "react"

const testimonials = [
  {
    quote:
      "Lunitea saved us weeks of boilerplate setup. We launched our MVP in record time, with full authentication and theming out of the box.",
    name: "Jasmine K.",
    title: "Founder @StartupNest",
  },
  {
    quote:
      "The role-based access and prebuilt admin panel gave our team everything we needed to scale fast. Highly recommended.",
    name: "Ryan T.",
    title: "CTO @DevPilot",
  },
  {
    quote:
      "From design to code structure, Lunitea is beautifully thought out. It’s the kind of starter kit I wish I had years ago.",
    name: "Linda C.",
    title: "Full Stack Engineer",
  },
  {
    quote:
      "It’s rare to find a boilerplate this elegant and complete. Tailwind, Next.js 15, shadcn/ui — all wired up and ready to go.",
    name: "Mohammed A.",
    title: "Tech Lead @Growly",
  },
  {
    quote:
      "Lunitea gave me the confidence to build my SaaS idea the right way, with modern patterns and no wasted time.",
    name: "Zara M.",
    title: "Solo Founder",
  },
];


export function TestimonialsCarousel() {
  const [api, setApi] = useState<CarouselApi | null>(null)
  const intervalRef = useRef<NodeJS.Timeout | null>(null)

  const getVisibleItems = () => {
    const width = window.innerWidth
    if (width >= 1024) return 3 // desktop
    if (width >= 768) return 2 // tablet
    return 1 // mobile
  }

  useEffect(() => {
    if (!api) return

    const visibleItems = getVisibleItems()
    const shouldAutoScroll = testimonials.length > visibleItems

    if (shouldAutoScroll) {
      intervalRef.current = setInterval(() => {
        api.scrollNext()
      }, 2000) // auto-scroll every 2s
    }

    return () => {
      if (intervalRef.current) clearInterval(intervalRef.current)
    }
  }, [api])

  return (
    <section className="py-24 px-4 border-y border-border bg-muted/10 dark:bg-muted/5">
      <div className="max-w-5xl mx-auto text-center">
        <h2 className="text-2xl leading-10 text-neutral-700 dark:text-neutral-300 font-bold mb-6 tracking-tight">
         These testimonials are generated by AI for presentaion, we are on early stage without testimonials yet!, would you be our first customer with <span className=" whitespace-nowrap text-neutral-200 rounded-lg dark:text-neutral-700 font-black tracking-wide bg-neutral-700 dark:bg-neutral-300 px-2">60% Discount?</span>
        </h2>

       
        <CTA/>
        
        <Carousel
          opts={{
            align: "start",
            loop: true,
          }}
          setApi={setApi}
          className="w-full mt-4 select-none"
        >
          <CarouselContent className="-ml-4 my-4 sm:mx-0 mx-3">
            {testimonials.map((item, index) => (
              <CarouselItem
                key={index}
                className="pl-4 md:basis-1/2 lg:basis-1/3"
              >
                <Card className="h-full cursor-grab flex flex-col justify-between rounded-2xl border border-border shadow-sm bg-muted/40 dark:bg-muted/20 text-left p-6">
                  <CardContent className="flex flex-col gap-4 p-0">
                    <Quote className="w-6 h-6 text-muted-foreground" />
                    <p className="text-base leading-relaxed text-foreground">
                      “{item.quote}”
                    </p>
                    <div className="mt-4">
                      <p className="text-sm font-semibold text-foreground">
                        {item.name}
                      </p>
                      <p className="text-xs text-muted-foreground">
                        {item.title}
                      </p>
                    </div>
                  </CardContent>
                </Card>
              </CarouselItem>
            ))}
          </CarouselContent>
          <div className="flex justify-center mt-6 gap-2">
            <CarouselPrevious className="relative" />
            <CarouselNext className="relative" />
          </div>
        </Carousel>
      </div>
    </section>
  )
}
